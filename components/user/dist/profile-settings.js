"use client";
"use strict";
exports.__esModule = true;
exports.ProfileSettings = void 0;
var card_1 = require("@/components/ui/card");
var tabs_1 = require("@/components/ui/tabs");
var button_1 = require("@/components/ui/button");
var input_1 = require("@/components/ui/input");
var label_1 = require("@/components/ui/label");
var icons_1 = require("@/components/icons");
function ProfileSettings() {
    return (React.createElement("div", { className: "space-y-4" },
        React.createElement("div", { className: "flex items-center justify-between" },
            React.createElement("h2", { className: "text-2xl font-bold tracking-tight" }, "Account Settings")),
        React.createElement(tabs_1.Tabs, { defaultValue: "profile", className: "w-full" },
            React.createElement(tabs_1.TabsList, { className: "grid w-full grid-cols-4" },
                React.createElement(tabs_1.TabsTrigger, { value: "profile", className: "flex items-center gap-2" },
                    React.createElement(icons_1.UserProfileIcon, { className: "h-4 w-4" }),
                    React.createElement("span", { className: "hidden sm:inline" }, "Profile")),
                React.createElement(tabs_1.TabsTrigger, { value: "settings", className: "flex items-center gap-2" },
                    React.createElement(icons_1.SettingsIcon, { className: "h-4 w-4" }),
                    React.createElement("span", { className: "hidden sm:inline" }, "Settings")),
                React.createElement(tabs_1.TabsTrigger, { value: "security", className: "flex items-center gap-2" },
                    React.createElement(icons_1.SecurityIcon, { className: "h-4 w-4" }),
                    React.createElement("span", { className: "hidden sm:inline" }, "Security")),
                React.createElement(tabs_1.TabsTrigger, { value: "notifications", className: "flex items-center gap-2" },
                    React.createElement(icons_1.NotificationsIcon, { className: "h-4 w-4" }),
                    React.createElement("span", { className: "hidden sm:inline" }, "Notifications"))),
            React.createElement(tabs_1.TabsContent, { value: "profile" },
                React.createElement(card_1.Card, null,
                    React.createElement(card_1.CardHeader, null,
                        React.createElement(card_1.CardTitle, null, "Personal Information"),
                        React.createElement(card_1.CardDescription, null, "Update your personal details")),
                    React.createElement(card_1.CardContent, { className: "space-y-4" },
                        React.createElement("div", { className: "grid grid-cols-1 gap-4 sm:grid-cols-2" },
                            React.createElement("div", { className: "space-y-2" },
                                React.createElement(label_1.Label, { htmlFor: "first-name" }, "First name"),
                                React.createElement(input_1.Input, { id: "first-name", defaultValue: "John" })),
                            React.createElement("div", { className: "space-y-2" },
                                React.createElement(label_1.Label, { htmlFor: "last-name" }, "Last name"),
                                React.createElement(input_1.Input, { id: "last-name", defaultValue: "Doe" }))),
                        React.createElement("div", { className: "space-y-2" },
                            React.createElement(label_1.Label, { htmlFor: "email" }, "Email"),
                            React.createElement(input_1.Input, { id: "email", type: "email", defaultValue: "john.doe@example.com" })),
                        React.createElement("div", { className: "space-y-2" },
                            React.createElement(label_1.Label, { htmlFor: "phone" }, "Phone"),
                            React.createElement(input_1.Input, { id: "phone", type: "tel", defaultValue: "+1 (555) 123-4567" })),
                        React.createElement(button_1.Button, { className: "bg-emerald-600 hover:bg-emerald-700" }, "Save Changes")))),
            React.createElement(tabs_1.TabsContent, { value: "settings" },
                React.createElement(card_1.Card, null,
                    React.createElement(card_1.CardHeader, null,
                        React.createElement(card_1.CardTitle, null, "Preferences"),
                        React.createElement(card_1.CardDescription, null, "Manage your account preferences")),
                    React.createElement(card_1.CardContent, { className: "space-y-4" },
                        React.createElement("div", { className: "space-y-2" },
                            React.createElement("label", { htmlFor: "language" }, "Language"),
                            React.createElement("select", { id: "language", className: "w-full p-2 border rounded-md" },
                                React.createElement("option", { value: "en" }, "English"),
                                React.createElement("option", { value: "es" }, "Spanish"),
                                React.createElement("option", { value: "fr" }, "French"),
                                React.createElement("option", { value: "de" }, "German"))),
                        React.createElement("div", { className: "space-y-2" },
                            React.createElement("label", { htmlFor: "timezone" }, "Timezone"),
                            React.createElement("select", { id: "timezone", className: "w-full p-2 border rounded-md" },
                                React.createElement("option", { value: "utc-8" }, "Pacific Time (UTC-8)"),
                                React.createElement("option", { value: "utc-5" }, "Eastern Time (UTC-5)"),
                                React.createElement("option", { value: "utc+0" }, "Greenwich Mean Time (UTC+0)"),
                                React.createElement("option", { value: "utc+1" }, "Central European Time (UTC+1)"))),
                        React.createElement(button_1.Button, { className: "bg-emerald-600 hover:bg-emerald-700" }, "Save Preferences")))),
            React.createElement(tabs_1.TabsContent, { value: "security" },
                React.createElement(card_1.Card, null,
                    React.createElement(card_1.CardHeader, null,
                        React.createElement(card_1.CardTitle, null, "Security Settings"),
                        React.createElement(card_1.CardDescription, null, "Manage your security preferences")),
                    React.createElement(card_1.CardContent, { className: "space-y-4" },
                        React.createElement("div", { className: "space-y-2" },
                            React.createElement(label_1.Label, { htmlFor: "current-password" }, "Current Password"),
                            React.createElement(input_1.Input, { id: "current-password", type: "password" })),
                        React.createElement("div", { className: "space-y-2" },
                            React.createElement(label_1.Label, { htmlFor: "new-password" }, "New Password"),
                            React.createElement(input_1.Input, { id: "new-password", type: "password" })),
                        React.createElement("div", { className: "space-y-2" },
                            React.createElement(label_1.Label, { htmlFor: "confirm-password" }, "Confirm New Password"),
                            React.createElement(input_1.Input, { id: "confirm-password", type: "password" })),
                        React.createElement(button_1.Button, { className: "bg-emerald-600 hover:bg-emerald-700" }, "Update Password")))),
            React.createElement(tabs_1.TabsContent, { value: "notifications" },
                React.createElement(card_1.Card, null,
                    React.createElement(card_1.CardHeader, null,
                        React.createElement(card_1.CardTitle, null, "Notification Preferences"),
                        React.createElement(card_1.CardDescription, null, "Manage how you receive notifications")),
                    React.createElement(card_1.CardContent, { className: "space-y-4" },
                        React.createElement("div", { className: "flex items-center space-x-2" },
                            React.createElement("label", { htmlFor: "email-notifications" }, "Email Notifications"),
                            React.createElement("input", { type: "checkbox", id: "email-notifications", className: "rounded border-gray-300", defaultChecked: true })),
                        React.createElement("div", { className: "flex items-center space-x-2" },
                            React.createElement("label", { htmlFor: "sms-notifications" }, "SMS Notifications"),
                            React.createElement("input", { type: "checkbox", id: "sms-notifications", className: "rounded border-gray-300", defaultChecked: true })),
                        React.createElement("div", { className: "flex items-center space-x-2" },
                            React.createElement("label", { htmlFor: "push-notifications" }, "Push Notifications"),
                            React.createElement("input", { type: "checkbox", id: "push-notifications", className: "rounded border-gray-300", defaultChecked: true })),
                        React.createElement("div", { className: "flex items-center space-x-2" },
                            React.createElement("label", { htmlFor: "marketing-emails" }, "Marketing Emails"),
                            React.createElement("input", { type: "checkbox", id: "marketing-emails", className: "rounded border-gray-300" })),
                        React.createElement(button_1.Button, { className: "bg-emerald-600 hover:bg-emerald-700" }, "Save Preferences")))))));
}
exports.ProfileSettings = ProfileSettings;
